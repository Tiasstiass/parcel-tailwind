{%- if image.id != null -%}
  {%- comment -%}
      @author  - Alex H
      @version - 2.0

    INPUT PARAMETERS:
      @image        - object  - mandatory
      @tablet_image - object  - optional
      @mobile_image - object  - optional
      @responsive   - boolean - optional

    DESCRIPTION:
      Snippet for rendering an image with multiple sources (srcset).
      It accepts up to 3 image parameters for desktop/tablet/mobile.
----------------------------------------------------------------------------
      Can be used inside a fixed size container with the
      'responsive' parameter set to true. The only condition is that
      the containing element is relatively positioned.
      You can use the following classes for parent container:
      - .image-responsive__container               - 16:9 image
      - 'image-square image-responsive__container' - square image
----------------------------------------------------------------------------
    TODO:
      Add parameter for changing mobile / tablet breakpoint trigger
      Add parameter for directly inserting the image with a preset size

  {%- endcomment -%}

  {%- liquid

    if tablet_image != blank and mobile_image != blank
      assign screen_widths_desktop = "1080x, 1296x, 1340x, 1512x, 1728x, 1920x" | split: ", "
      assign screen_widths_tablet  = "768x, 900x, 1024x" | split: ", "
      assign screen_widths_mobile  = "320x, 360x, 480x, 540x, 720x" | split: ", "
    elsif tablet_image == blank and mobile_image != blank
      assign screen_widths_desktop = "900x, 1024x, 1080x, 1296x, 1340x, 1512x, 1728x, 1920x" | split: ", "
      assign screen_widths_mobile  = "320x, 360x, 480x, 540x, 720x, 768x" | split: ", "
    elsif tablet_image != blank and mobile_image == blank
      assign screen_widths_desktop = "1080x, 1296x, 1340x, 1512x, 1728x, 1920x" | split: ", "
      assign screen_widths_tablet  = "320x, 360x, 480x, 540x, 720x, 768x, 900x, 1024x" | split: ", "
    elsif tablet_image == blank and mobile_image == blank
      assign screen_widths_desktop = "320x, 360x, 480x, 540x, 720x, 768x, 900x, 1024x, 1080x, 1296x, 1340x, 1512x, 1728x, 1920x" | split: ", "
    endif

    assign x2_retina_size = image.width | divided_by: 2
    assign tablet_x2_retina_size = tablet_image.width | divided_by: 2

    if image contains ".jpg" or image contains ".jpeg"
      assign image_format = "pjpg"
    else
      assign image_format = blank
    endif

    if tablet_image != blank
      if tablet_image contains ".jpg" or tablet_image contains ".jpeg"
        assign tablet_image_format = "pjpg"
      else
        assign tablet_image_format = blank
      endif
    endif

    if mobile_image != blank
      if mobile_image contains ".jpg" or mobile_image contains ".jpeg"
        assign mobile_image_format = "pjpg"
      else
        assign mobile_image_format = blank
      endif
    endif

  -%}

  <picture
    id="image-factory--{{ image.id }}"
    {% if responsive %}class="image-responsive__image{% endif %}">

    {%- if mobile_image != blank -%}
    <!-- MOBILE SOURCES -->
      {%- for mobile_width in screen_widths_mobile -%}
        {%- assign mobile_width_integer = mobile_width | minus: 'x' -%}

          {%- liquid
            assign mobile_width_2x = mobile_width | times: 2

            if mobile_image_format != blank
              assign mobile_src_data    = mobile_image | image_url: width: mobile_width, format: mobile_image_format
              assign mobile_src_data_x2 = mobile_image | image_url: width: mobile_width_2x, format: mobile_image_format, scale: 2
            else
              assign mobile_src_data    = mobile_image | image_url: width: mobile_width
              assign mobile_src_data_x2 = mobile_image | image_url: width: mobile_width_2x, scale: 2
            endif
          -%}

          <source
            type        = "image/webp"
            media       = "(max-width: {{ mobile_width_integer }}px)"
            data-srcset = "{{ mobile_src_data }} 1x{% if mobile_x2_retina_size > mobile_width_integer %}, {{ mobile_src_data_x2 }} 2x{% endif %}"
          >

          {%- liquid
            if mobile_image.width <= tablet_width_integer
              break
            endif
          -%}

      {%- endfor -%}
    {%- endif -%}

    {%- if tablet_image != blank -%}
      <!-- TABLET SOURCES -->
      {%- for tablet_width in screen_widths_tablet -%}
        {%- assign tablet_width_integer = tablet_width | minus: 'x' -%}

          {%- liquid
            assign tablet_width_2x = tablet_width | times: 2

            if tablet_image_format != blank
              assign tablet_src_data    = tablet_image | image_url: width: tablet_width, format: tablet_image_format
              assign tablet_src_data_x2 = tablet_image | image_url: width: tablet_width_2x, format: tablet_image_format, scale: 2
            else
              assign tablet_src_data    = tablet_image | image_url: width: tablet_width
              assign tablet_src_data_x2 = tablet_image | image_url: width: tablet_width_2x, scale: 2
            endif
          -%}

          <source
            type        = "image/webp"
            media       = "(max-width: {{ tablet_width | minus: 'x' }}px)"
            data-srcset = "{{ tablet_src_data }} 1x{% if tablet_x2_retina_size > tablet_width_integer %}, {{ tablet_src_data_x2 }} 2x{% endif %}"
          >

          {%- liquid
            if tablet_image.width <= tablet_width_integer
              break
            endif
          -%}

      {%- endfor -%}
    {%- endif -%}

    <!-- DESKTOP SOURCES -->
    {%- for width in screen_widths_desktop -%}
      {%- assign width_integer = width | minus: 'x' -%}

        {%- liquid
          assign width_2x = width | times: 2

          if image_format != blank
            assign src_data    = image | image_url: width: width, format: image_format
            assign src_data_x2 = image | image_url: width: width_2x, format: image_format, scale: 2
          else
            assign src_data    = image | image_url: width: width
            assign src_data_x2 = image | image_url: width: width_2x, scale: 2
          endif
        -%}

        <source
          type        = "image/webp"
          media       = "(max-width: {{ width | minus: 'x' }}px)"
          data-srcset = "{{ src_data }} 1x{% if x2_retina_size > width_integer %}, {{ src_data_x2 }} 2x{% endif %}"
        >

        {%- liquid
          if image.width <= width_integer
            break
          endif
        -%}

    {%- endfor -%}

    <img
      data-src = "{{ image | image_url: width: image.width }}"
      src      = "{{ image | image_url: width: 100 }}"
      class    = "anim-skeleton tested"
      loading  = "lazy"
      width    = "{{ image.width }}px"
      height   = "{{ image.height }}px"
    />
  </picture>

{% else %}
  {%- style -%}
    #image-factory--{{ image.id }}-err svg {
      background-color: var(--color__fog) !important;
    }
    #image-factory--{{ image.id }}-err figcaption {
      padding-top: 5px;
    }
  {%- endstyle -%}
  <div id="image-factory--{{ image.id }}-err">
    <figure>
      {{ 'image' | placeholder_svg_tag }}
      <figcaption>The file you're trying to display is not an image.</figcaption>
    </figure>
  </div>
{% endif %}